<?php
/*
|--------------------------------------------------------------------------
| Application Routes
|--------------------------------------------------------------------------
|
| Here is where you can register all of the routes for an application.
| It's a breeze. Simply tell Laravel the URIs it should respond to
| and give it the controller to call when that URI is requested.
|
*/

Route::group(['middleware' => 'log'], function () {
    // Home画面
    Route::get('/', 'HomeController@index');
    //Route::get('/home', [ 'as' => 'home', 'uses' => 'HomeController@index'])->name('home');;
    Route::get('/home', [ 'as' => 'home', 'uses' => 'HomeController@index']);
    
    // コンテンツ画面
    Route::get('contents', [ 'as' => 'contents', 'uses' => 'ContentsController@index'])->middleware(['member_only']);	//★hyono
    //Route::get('contents', [ 'as' => 'contents', 'uses' => 'ContentsController@index']);
    
    // クイズ画面
    Route::get('quizpacks', [ 'as' => 'quizpacks', 'uses' => 'QuizPacksController@index'])->middleware(['member_only']);	//★hyono
    //Route::get('quizpacks', [ 'as' => 'quizpacks', 'uses' => 'QuizPacksController@index']);
    
    // クイズスタート画面
    // Route::get('quizpacks/quiz_start',[ 'as' => 'quiz_start','uses' => 'QuizPacksController@quiz_start']);
    Route::get('quizpacks/{quiz_pack_id}/quiz_start', [ 'as' => 'quiz_start', 'uses' => 'QuizPacksController@quiz_start']);


    //クイズ回答正解画面
    // Route::get('quizpacks/quiz_answer_correct',[ 'as' => 'quiz_answer_correct','uses' => 'QuizPacksController@quiz_answer_correct']);
    // //クイズ回答不正解画面
    // Route::get('quizpacks/quiz_answer_incorrect',[ 'as' => 'quiz_answer_incorrect','uses' => 'QuizPacksController@quiz_answer_incorrect']);
    //クイズ回答選択画面
    // Route::get('quizpacks/quiz_answer_select',[ 'as' => 'quiz_answer_select','uses' => 'QuizPacksController@quiz_answer_select']);
    Route::get('quizpacks/{quiz_pack_id}/quizzes/{quize_id}', [ 'as' => 'quiz_answer_select', 'uses' => 'QuizPacksController@quiz_answer_select']);

    Route::post('quizpacks/{quiz_pack_id}/quizzes/{quiz_id}/answer', [ 'as' => 'quiz_answer_choice', 'uses' => 'QuizPacksController@quiz_answer_choice']);
    //クイズ成績画面
    Route::get('quizpacks/{quiz_pack_id}/quiz_score', [ 'as' => 'quiz_score', 'uses' => 'QuizPacksController@quiz_score']);
    //クイズ回答確認画面
    Route::get('quizpacks/{quiz_pack_id}/quizzes/{quiz_id}/answer', [ 'as' => 'quiz_answer_confirm', 'uses' => 'QuizPacksController@quiz_answer_confirm']);
    // 聴診専用スピーカ画面
    Route::get('speaker', [ 'as' => 'speaker', 'uses' => 'SpeakerController@index']);
    // サイトについて
    Route::get('about', [ 'as' => 'about', function() {
            return view('about');
        }]);
    // 利用規約
    Route::get('terms', [ 'as' => 'terms', function() {
            return view('terms');
        }]);
    // プライバシーポリシー
    Route::get('privacy', [ 'as' => 'privacy', function() {
            return view('privacy');
        }]);
    // お知らせ
    Route::get('news', [ 'as' => 'news', function() {
            return view('news');
        }]);
    // よくある質問
    Route::get('faq', [ 'as' => 'faq', function() {
            return view('faq');
        }]);
    // お問い合わせ
    Route::get('contact', [ 'as' => 'contact', function() {
            return view('contact');
        }]);
    // お問い合わせフォーム
    Route::get('contact_form', [ 'as' => 'contact_form', function() {
            return view('contact_form');
        }]);
    // お問合わせフォーム確認画面
    Route::post('contact_form_confirm', [ 'as' => 'contact_form_confirm', 'uses' => 'ContactFormController@confirm']);
    // お問合わせフォームメール送信
    Route::post('contact_form_send_mail', [ 'as' => 'contact_form_send_mail', 'uses' => 'ContactFormController@send_mail']);

// telmedica 20170606
    // 認証の登録
    Route::get('register'  ,[ 'as' => 'register'   ,function() {
        return view('register');
    }]);
    // 認証の登録フォーム
    Route::get('register_form' ,[ 'as' => 'register_form'   ,function() {
        return view('register_form');
    }]);
    // 認証の登録フォーム確認画面
    Route::post('register_form_confirm' ,[ 'as' => 'register_form_confirm','uses' => 'RegisterFormController@confirm']);
    // 認証の登録フォームメール送信
    Route::post('register_form_send_mail' ,[ 'as' => 'register_form_send_mail','uses' => 'RegisterFormController@send_mail']);
    
// telemedica 20170612
    // ベスト
    Route::get('vest', [ 'as' => 'vest', function() {
            return view('vest');
        }]);
    // 使い方
    Route::get('use', [ 'as' => 'use', function() {
            return view('use');
        }]);

/**** ★hyono ****/
    // 利用者ログイン処理
    // ログイン画面（表示）
    Route::get('member_login', 'MemberController@getMemberLogin')->name('member_login');
    // ログインコードで認証（画面は非表示）
    Route::get('member_login_code/{login_code}', 'MemberController@getMemberLoginCode');
    //Route::get('login/{login_code}', 'MemberController@getLoginCode');
    // ログイン処理（実行）
    Route::post('member_login', 'MemberController@postMemberLogin');
    // ログアウト処理
    Route::get('member_logout', 'MemberController@getMemberLogout');
    // ジャンプ
    Route::get('member_jump', function() {
        return view('member_jump');
    });
    // ★テスト
    Route::get('test', 'TestController@index');
//    Route::get('test', 'TestController@index')->middleware(['member_only']);
    Route::get('test/{code}', 'TestController@show');
/**** ★hyono ****/
});

// ログ出力用API
Route::post('log', 'LogController@store');

// 管理画面グループ（認証なし）
Route::group(['namespace' => 'Auth', 'prefix' => 'admin'], function () {
    // ログイン画面
    Route::get('login', 'AuthController@getLogin');
    // ログイン処理
    Route::post('login', 'AuthController@postLogin');
    // ログアウト処理
    Route::get('logout', 'AuthController@getLogout');
});

// 管理画面グループ（認証あり）
Route::group(['namespace' => 'Admin', 'prefix' => 'admin', 'middleware' => 'auth'], function () {
    // -----------システム管理者/監修者が使用可能-----------
    // 管理画面のルート（/admin）にアクセスされた場合、ロールによって画面が異なる
    // システム管理者はクイズパック一覧画面、監修者はコンテンツ一覧画面を表示する
    Route::get('/', [ 'as' => 'admin_root', function() {
            return App::abort(503); // フェーズ１では実装しない。システム管理者、監修者ではない場合、エラー画面を表示する
        }])->middleware(['role_root']);
    // コンテンツ一覧
    Route::resource("stetho_sounds", "StethoSoundController");
    // 監修コメント追加API
    // Route::post('stetho_sounds/{id}/comments', 'StethoSoundController@add_comment');
    // 監修ステータス変更API
    Route::put('stetho_sounds/{id}/status', [ 'as' => 'admin.stetho_sounds.update_status', 'uses' => 'StethoSoundController@update_status']);
    // 監修コメントAPI
    Route::resource('stetho_sounds.comments', 'CommentController');

    // -----------システム管理者のみ使用可能-----------
    Route::group(['middleware' => 'admin_only'], function () {
        // クイズパック一覧
        Route::resource("quiz_packs", "QuizPackController", ['except' => ['show']]);
        // クイズパックの表示順変更API
        Route::patch('quiz_packs_orders', [ 'as' => 'admin.quiz_packs_orders', 'uses' => 'QuizPackController@update_orders']);
        // クイズ一覧
        Route::resource("quizzes", "QuizController", ['except' => ['show']]);
        // 監修者一覧
        Route::resource("users", "UserController", ['except' => ['show']]);
    });
});
